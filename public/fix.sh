import json
from shapely.geometry import shape, mapping

# Original GeoJSON data
geojson_data = {
    "type": "FeatureCollection",
    "features": [
        {
            "type": "Feature",
            "properties": {
                "name": "Putnam County",
                "state": "Ohio",
                "fips": "39137",
                "established": 1820,
                "countySeat": "Ottawa",
                "areaKm2": 1258,
                "population": 33861
            },
            "geometry": {
                "type": "Polygon",
                "coordinates": [
                    [
                        [-84.137687, 41.134029],
                        [-84.137707, 41.118963],
                        [-84.137687, 41.110771],
                        [-84.137677, 41.105981],
                        [-84.137557, 41.103321],
                        [-84.137557, 41.096121],
                        [-84.137507, 41.081641],
                        [-84.137507, 41.073221],
                        [-84.137507, 41.068801],
                        [-84.137507, 41.062321],
                        [-84.137447, 41.055721],
                        [-84.137447, 41.052481],
                        [-84.137447, 41.047881],
                        [-84.137447, 41.037641],
                        [-84.137447, 41.037441],
                        [-84.137447, 41.034461],
                        [-84.137417, 41.023971],
                        [-84.137397, 41.018741],
                        [-84.133387, 41.018741],
                        [-84.132607, 41.018721],
                        [-84.088797, 41.018551],
                        [-84.087967, 41.018551],
                        [-84.035927, 41.018371],
                        [-84.034727, 41.018341],
                        [-84.034727, 40.869431],
                        [-84.038777, 40.869431],
                        [-84.039967, 40.869431],
                        [-84.062407, 40.869431],
                        [-84.064967, 40.869431],
                        [-84.073917, 40.869431],
                        [-84.074677, 40.869431],
                        [-84.087967, 40.869431],
                        [-84.092777, 40.869431],
                        [-84.096207, 40.869431],
                        [-84.097887, 40.869431],
                        [-84.099627, 40.869431],
                        [-84.112967, 40.869431],
                        [-84.121917, 40.869431],
                        [-84.123707, 40.869431],
                        [-84.137397, 40.869431],
                        [-84.137397, 40.881921],
                        [-84.137397, 40.883651],
                        [-84.137397, 40.890851],
                        [-84.137397, 40.898051],
                        [-84.137397, 40.905251],
                        [-84.137397, 40.912451],
                        [-84.137397, 40.919651],
                        [-84.137397, 40.926851],
                        [-84.137397, 40.934051],
                        [-84.137397, 40.941251],
                        [-84.137397, 40.948451],
                        [-84.137397, 40.955651],
                        [-84.137397, 40.962851],
                        [-84.137397, 40.970051],
                        [-84.137397, 40.977251],
                        [-84.137397, 40.984451],
                        [-84.137397, 40.991651],
                        [-84.137397, 40.998851],
                        [-84.137397, 41.006051],
                        [-84.137397, 41.013251],
                        [-84.137397, 41.018341],
                        [-84.137687, 41.134029]
                    ]
                ]
            }
        }
    ]
}

# Fix polygons to follow the right-hand rule
for feature in geojson_data['features']:
    geometry = shape(feature['geometry'])
    if not geometry.is_ccw:  # Check if the polygon is counter-clockwise
        corrected_geometry = mapping(geometry)  # Convert back to GeoJSON format
        feature['geometry']['coordinates'] = corrected_geometry['coordinates']

# Save the corrected GeoJSON to a file
with open("corrected_geojson.json", "w") as f:
    json.dump(geojson_data, f, indent=2)

print("GeoJSON fixed and saved as 'corrected_geojson.json'.")
